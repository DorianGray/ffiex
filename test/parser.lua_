local ffi = require "ffiex.init"
local required
if ffi.os == "OSX" then
	required = {
		["mpool.h"] = {"db.h"}, -- pgno_t
		["pcap-bpf.h"] = {"sys/types.h"}, -- u_int
		["pcap-namedb.h"] = {"sys/types.h", "pcap/bpf.h"}, -- u_char, bpf_u_int32
		["tclDecls.h"] = {"tcl.h"}, -- EXTERN, CONST84_RETURN
		["tkDecls.h"] = {"tcl.h"}, -- EXTERN, CONST84_RETURN
		["lber.h"] = {"lber_types.h"},
		["ldif.h"] = {"lber_types.h"},
	}
	ffi.cdef "#define XP_NO_X_HEADERS"
	ffi.cdef "#include <stdio.h>"
elseif ffi.os == "Linux" then
	required = {
		["gcrypt-module.h"] = {"gcrypt.h"}, -- gcry_error_code_t		
		["kdb.h"] = {"limits.h"}, -- SHRT_MAX
	}
end
if required[arg[1]] then
	for _,hdr in ipairs(required[arg[1]]) do
		print('include ' .. hdr .. ' for ' .. arg[1])
		ffi.cdef (("#include <%s>"):format(hdr))
	end
end
ffi.cdef (("#include <%s>"):format(arg[1]))
